// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: book.proto

package com.example.spanner.protobuf.book;

/**
 * Protobuf enum {@code com.book.Genre}
 */
public enum Genre
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>BLUES = 0;</code>
   */
  BLUES(0),
  /**
   * <code>CLASSICAL = 1;</code>
   */
  CLASSICAL(1),
  /**
   * <code>COUNTRY = 2;</code>
   */
  COUNTRY(2),
  /**
   * <code>ROCK = 3;</code>
   */
  ROCK(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>BLUES = 0;</code>
   */
  public static final int BLUES_VALUE = 0;
  /**
   * <code>CLASSICAL = 1;</code>
   */
  public static final int CLASSICAL_VALUE = 1;
  /**
   * <code>COUNTRY = 2;</code>
   */
  public static final int COUNTRY_VALUE = 2;
  /**
   * <code>ROCK = 3;</code>
   */
  public static final int ROCK_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Genre valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Genre forNumber(int value) {
    switch (value) {
      case 0: return BLUES;
      case 1: return CLASSICAL;
      case 2: return COUNTRY;
      case 3: return ROCK;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Genre>
  internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Genre> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<Genre>() {
        public Genre findValueByNumber(int number) {
          return Genre.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
  getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
  getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
  getDescriptor() {
    return com.example.spanner.protobuf.book.BookProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Genre[] VALUES = values();

  public static Genre valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Genre(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.book.Genre)
}

